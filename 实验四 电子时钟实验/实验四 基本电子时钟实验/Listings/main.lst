C51 COMPILER V9.54   MAIN                                                                  05/20/2024 19:05:48 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Tool\Keil5\Keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Delay.h"
   3          #include "Nixie.h"
   4          #include "Timer0.h"
   5          #include "Key.h"
   6          
   7          unsigned char RunFlag=1;      //RunFlag:模式选择,显示模式/修改模式
   8          unsigned char KeyNum;         //KeyNum:键盘对应模式序号
   9          //1是校准
  10          //2是调时，3是调分，4是调秒
  11          unsigned char Sec, Min, Hour;
  12          
  13          
  14          void main()
  15          {
  16   1          Timer0Init();
  17   1          // 括号内不带参数
  18   1          // 注意函数名字对应
  19   1          // 在C51中，调用已经写好的函数前面也不需要加void或者int
  20   1          // 你像void Timer0Init();就无法调用函数了
  21   1          P1 = 0xFF;    // 进入输入模式
  22   1          while(1)
  23   1          {
  24   2              KeyNum=Key();
  25   2              if(KeyNum==1)
  26   2              {
  27   3                  //P3_0=0;
  28   3                  RunFlag=!RunFlag;
  29   3              }
  30   2              if(!RunFlag&&KeyNum==2)
  31   2              {
  32   3                  // 保证小时永远不会超过24
  33   3                  Hour = (Hour + 1)%24;
  34   3              }
  35   2              if(!RunFlag&&KeyNum==3)
  36   2              {
  37   3                  // 保证分钟永远不会超过60
  38   3                  Min = (Min + 1)%60;
  39   3              }
  40   2              if(!RunFlag&&KeyNum==4)
  41   2              {
  42   3                  // 保证秒永远不会超过60
  43   3                  Sec = (Sec + 1)%60;
  44   3              }
  45   2              // 将时间存储在显示缓存区
  46   2              Nixie_SetBuf(6,Sec%10);
  47   2              Nixie_SetBuf(5,Sec/10);
  48   2              Nixie_SetBuf(4,Min%10);
  49   2              Nixie_SetBuf(3,Min/10);
  50   2              Nixie_SetBuf(2,Hour%10);
  51   2              Nixie_SetBuf(1,Hour/10);
  52   2          }
  53   1      }
  54          
C51 COMPILER V9.54   MAIN                                                                  05/20/2024 19:05:48 PAGE 2   

  55          void Sec_Loop(void)
  56          {
  57   1          if(RunFlag)
  58   1          {
  59   2              Sec++;
  60   2              if(Sec>=60)
  61   2              {
  62   3                  Sec=0;
  63   3                  Min++;
  64   3                  if(Min>=60)
  65   3                  {
  66   4                      Min=0;
  67   4                      Hour++;
  68   4                      if(Hour>=24)
  69   4                      {
  70   5                          Hour=0;
  71   5                      }
  72   4                  }
  73   3              }
  74   2          }
  75   1      }
  76          
  77          
  78          void Timer0_Rountine() interrupt 1
  79          {
  80   1          static unsigned char T0Count1=0,T0Count2=0;   
  81   1          static unsigned int T0Count3=0;
  82   1          TH0 = 0xFC;     // 1ms装填初值
  83   1          TL0 = 0x66;     // 设定定时初值
  84   1          T0Count1++;
  85   1          //中断一次就是一毫秒，1000次就是1秒
  86   1          if(T0Count1>=20)
  87   1          {
  88   2              // 采用定时器每20ms扫描一次键盘
  89   2              T0Count1=0;
  90   2              Key_Loop();
  91   2          }
  92   1          T0Count2++;
  93   1          if(T0Count2>=2)
  94   1          {
  95   2              // 定时器每2ms扫一次数码管
  96   2              T0Count2=0;
  97   2              Nixie_Loop();
  98   2          }
  99   1          T0Count3++;
 100   1          if(T0Count3>=1000)
 101   1          {
 102   2              // 1ms * 1000 = 1s
 103   2              T0Count3=0;
 104   2              Sec_Loop();
 105   2          }
 106   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    356    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.54   MAIN                                                                  05/20/2024 19:05:48 PAGE 3   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
